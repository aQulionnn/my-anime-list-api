// <auto-generated />
using System;
using AnimeFranchises.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AnimeFranchises.Infrastructure.Migrations
{
    [DbContext(typeof(AnimeFranchiseDbContext))]
    [Migration("20250324101157_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnimeFranchises.Domain.Entities.AnimeFranchise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("ViewingOrder")
                        .HasColumnType("integer")
                        .HasColumnName("viewing_order");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("anime_franchise", (string)null);
                });

            modelBuilder.Entity("AnimeFranchises.Domain.Entities.AnimeFranchiseInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AnimeFranchiseId")
                        .HasColumnType("uuid")
                        .HasColumnName("anime_franchise_id");

                    b.Property<int>("Language")
                        .HasColumnType("integer")
                        .HasColumnName("language");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("AnimeFranchiseId");

                    b.ToTable("anime_franchise_info", (string)null);
                });

            modelBuilder.Entity("AnimeFranchises.Domain.Entities.AnimeFranchiseInfo", b =>
                {
                    b.HasOne("AnimeFranchises.Domain.Entities.AnimeFranchise", "AnimeFranchise")
                        .WithMany("AnimeFranchiseInfos")
                        .HasForeignKey("AnimeFranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimeFranchise");
                });

            modelBuilder.Entity("AnimeFranchises.Domain.Entities.AnimeFranchise", b =>
                {
                    b.Navigation("AnimeFranchiseInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
