// <auto-generated />
using System;
using AnimeService.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AnimeService.Infrastructure.Migrations
{
    [DbContext(typeof(AnimeServiceDbContext))]
    [Migration("20250328094858_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnimeService.Domain.Entities.AnimeSerial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Episodes")
                        .HasColumnType("integer")
                        .HasColumnName("episodes");

                    b.Property<int>("Fillers")
                        .HasColumnType("integer")
                        .HasColumnName("fillers");

                    b.Property<Guid>("FranchiseId")
                        .HasColumnType("uuid")
                        .HasColumnName("franchise_id");

                    b.Property<int>("Part")
                        .HasColumnType("integer")
                        .HasColumnName("part");

                    b.Property<string>("PosterUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("poster_url");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("release_date");

                    b.Property<int>("Season")
                        .HasColumnType("integer")
                        .HasColumnName("season");

                    b.Property<int>("ViewingOrder")
                        .HasColumnType("integer")
                        .HasColumnName("viewing_order");

                    b.Property<int>("ViewingYear")
                        .HasColumnType("integer")
                        .HasColumnName("viewing_year");

                    b.Property<int>("WatchedEpisodes")
                        .HasColumnType("integer")
                        .HasColumnName("watched_episodes");

                    b.HasKey("Id");

                    b.ToTable("anime_serial", (string)null);
                });

            modelBuilder.Entity("AnimeService.Domain.Entities.AnimeSerialInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AnimeSerialId")
                        .HasColumnType("uuid")
                        .HasColumnName("anime_serial_id");

                    b.Property<int>("Language")
                        .HasColumnType("integer")
                        .HasColumnName("language");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("AnimeSerialId");

                    b.ToTable("anime_serial_info", (string)null);
                });

            modelBuilder.Entity("AnimeService.Domain.Entities.ReWatchedAnimeSerial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AnimeSerialId")
                        .HasColumnType("uuid")
                        .HasColumnName("anime_serial_id");

                    b.Property<int>("ReWatchedEpisodes")
                        .HasColumnType("integer")
                        .HasColumnName("re_watched_episodes");

                    b.Property<int>("ViewingOrder")
                        .HasColumnType("integer")
                        .HasColumnName("viewing_order");

                    b.HasKey("Id");

                    b.HasIndex("AnimeSerialId");

                    b.ToTable("re_watched_anime_serial", (string)null);
                });

            modelBuilder.Entity("AnimeService.Domain.Entities.AnimeSerialInfo", b =>
                {
                    b.HasOne("AnimeService.Domain.Entities.AnimeSerial", "AnimeSerial")
                        .WithMany("AnimeSerialInfos")
                        .HasForeignKey("AnimeSerialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimeSerial");
                });

            modelBuilder.Entity("AnimeService.Domain.Entities.ReWatchedAnimeSerial", b =>
                {
                    b.HasOne("AnimeService.Domain.Entities.AnimeSerial", "AnimeSerial")
                        .WithMany("ReWatchedAnimeSeries")
                        .HasForeignKey("AnimeSerialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimeSerial");
                });

            modelBuilder.Entity("AnimeService.Domain.Entities.AnimeSerial", b =>
                {
                    b.Navigation("AnimeSerialInfos");

                    b.Navigation("ReWatchedAnimeSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
